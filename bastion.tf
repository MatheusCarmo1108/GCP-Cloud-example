# Ansible variables
resource "local_file" "tf_ansible_vars_file_new"{
  content = <<-DOC
    # Ansible vars_file containing variable values from Terraform.
    # Generated by Terraform mgmt configuration.

    user: ${var.NEW_USER}
    cluster_environment: ${var.ENV}
    private_key: ${var.GCE_ANSIBLE_PRIVATE_FILE}
    cluster_name: ${google_container_cluster.gke-main-cluster.name}
    cluster_iad_name: ${google_container_cluster.gke-iad-cluster.name}
    master_node_endpoint: ${google_container_cluster.gke-main-cluster.endpoint}
    service_account_contents: ${var.GCP_SVC_ACC}
    project_id: ${var.PROJECT_ID}
    bastion_ip: ${google_compute_address.bastion-host-static-ip.address}
    cluster_location: ${var.ZONE}

    gitlab_access_token: ${var.GITLAB_ACCESS_TOKEN}
    nginx_ingress_controller_external_ip: ${google_compute_address.nginx-ingress-controller-external-static-ip.address}
    nginx_ingress_controller_internal_ip: ${google_compute_address.nginx-ingress-controller-internal-static-ip.address}
    nginx_ingress_controller_iad_internal_ip: ${google_compute_address.nginx-ingress-controller-iad-internal-static-ip.address}
    nginx_ingress_controller_iad_external_ip: ${google_compute_address.nginx-ingress-controller-iad-external-static-ip.address}

    local_api_features_path: ${var.LOCAL_API_FEATURES_PATH}
    local_api_projects_path: ${var.LOCAL_API_PROJECTS_PATH}
    local_gcp_avcacc_helm_access: ${var.LOCAL_GCP_SVCACC_HELM_ACCESS}
    
    gke_main_master_version: v${google_container_cluster.gke-main-cluster.master_version}
    DOC
  filename = "./tf_ansible_vars_file.yml"
}

resource "google_compute_instance" "bastion" {
  name         = "bastion"
  machine_type = var.BASTION_MACHINE_TYPE
  zone         = var.ZONE
  project      = var.PROJECT_ID
  tags         = ["${var.ENV}"]

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-10" 
    }
  }

  allow_stopping_for_update = true

  network_interface {
    network = google_compute_network.vpc.name
    subnetwork = google_compute_subnetwork.subnets.name

    access_config {
      // Static IP
      nat_ip = google_compute_address.bastion-host-static-ip.address
    }
  }

  metadata = {
    ssh-keys = join("\n", [for user, key in var.SSH_KEYS : "${user}:${key}"])
  }

  depends_on = [google_compute_firewall.instances-ssh]
}